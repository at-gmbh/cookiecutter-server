name: build

on:
  push:
    branches:
      - master
    paths-ignore:
      - '*.md'
  pull_request:
    branches:
      - master
    paths-ignore:
      - '*.md'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.9, 3.13]
        os: [ubuntu-latest, windows-latest]
    name: Test & Build (Python ${{ matrix.python-version }} on ${{ matrix.os }})
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          if [ $RUNNER_OS == 'Windows' ]; then
            echo 'export PATH="$HOME/.local/bin:$PATH"' >> $GITHUB_ENV
          else
            echo 'PATH=$HOME/.local/bin:$PATH' >> $GITHUB_ENV
          fi

      - name: Install dependencies
        run: |
          poetry install --with dev

      - name: Lint with flake8
        run: |
          poetry run flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
          poetry run flake8 src --count --exit-zero --max-complexity=10 --max-line-length=100 --ignore=F401,W504 --statistics

      - name: Test with pytest
        run: |
          poetry run pytest --cov-report term --cov-report xml --cov=src tests

      - name: Build a distribution package (wheel)
        run: |
          poetry build

      - name: Store distribution package
        uses: actions/upload-artifact@v4
        with:
          name: cookiecutter-server_${{ matrix.python-version }}_${{ matrix.os }}
          path: dist/
