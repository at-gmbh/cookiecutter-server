name: release

on:
  push:
    tags:
      # Push events to matching 'v*', i.e. 'v1.0', 'v20.15.10b5'
      - 'v*'

jobs:
  release:
    name: Create Release & Deploy on TestPyPI
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          poetry install --without dev

      - name: Build package
        run: |
          poetry build
          cd dist
          echo "WHEEL=$(ls *.whl)" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      # upload the wheel to the draft release
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/${{ env.WHEEL }}
          asset_name: ${{ env.WHEEL }}
          asset_content_type: application/zip
      # release on TestPyPI (for release on regular PyPI, see deploy.yml)
      - name: Publish Package to TestPyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_TEST_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
